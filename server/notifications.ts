import nodemailer from 'nodemailer';
import 'dotenv/config';
import type { Appointment, Pupil } from '@shared/schema';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST || 'smtp.gmail.com',
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: parseInt(process.env.SMTP_PORT || '587') === 465, // true –¥–ª—è Yandex (465), false –¥–ª—è Gmail (587)
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ email
export const isEmailConfigured = () => {
  return !!(process.env.SMTP_USER && process.env.SMTP_PASS);
};

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
export const sendEmail = async (to: string, subject: string, html: string) => {
  console.log('üìß ===== sendEmail –í–´–ó–í–ê–ù =====');
  console.log('üìß To:', to);
  console.log('üìß Subject:', subject);
  console.log('üìß Email –Ω–∞—Å—Ç—Ä–æ–µ–Ω?:', isEmailConfigured());
  
  if (!isEmailConfigured()) {
    console.log('‚ö†Ô∏è Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É:', { to, subject });
    return;
  }

  console.log('üìß –ò—Å–ø–æ–ª—å–∑—É–µ–º SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  console.log('üìß - Host:', process.env.SMTP_HOST);
  console.log('üìß - Port:', process.env.SMTP_PORT);
  console.log('üìß - User:', process.env.SMTP_USER);
  console.log('üìß - From:', process.env.SMTP_FROM);

  try {
    console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —á–µ—Ä–µ–∑ transporter...');
    const info = await transporter.sendMail({
      from: process.env.SMTP_FROM || `FitTrak Pro <${process.env.SMTP_USER}>`,
      to,
      subject,
      html,
    });
    console.log(`‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
    console.log(`‚úÖ Message ID: ${info.messageId}`);
    console.log(`‚úÖ To: ${to}`);
    console.log(`‚úÖ Subject: ${subject}`);
    console.log('üìß ===== sendEmail –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û =====');
  } catch (error) {
    console.error('‚ùå ===== –û–®–ò–ë–ö–ê sendEmail =====');
    console.error('‚ùå Error:', error);
    console.error('‚ùå Error message:', (error as Error).message);
    console.error('‚ùå Error stack:', (error as Error).stack);
    throw error;
  }
};

// Email —É—á–µ–Ω–∏–∫—É –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏
export const notifyStudentBookingConfirmed = async (
  appointment: Appointment,
  student: Pupil
) => {
  console.log('üìß notifyStudentBookingConfirmed –≤—ã–∑–≤–∞–Ω');
  console.log('üìß Student email:', student.email);
  console.log('üìß Appointment:', appointment);
  
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #10b981;">üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</h2>
      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${student.firstName || student.first_name || '–£—á–µ–Ω–∏–∫'} ${student.lastName || student.last_name || ''}!</p>
      <p>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–º.</p>
      <div style="background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${new Date(appointment.date).toLocaleDateString('ru-RU')}</p>
        <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${appointment.time}</p>
        <p><strong>‚úÖ –°—Ç–∞—Ç—É—Å:</strong> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</p>
      </div>
      <p>–ú—ã –∂–¥–µ–º –≤–∞—Å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!</p>
      <p style="color: #6b7280; font-size: 14px;">–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ FitTrak Pro</p>
    </div>
  `;

  await sendEmail(student.email, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞', html);
};

// Email —Ç—Ä–µ–Ω–µ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ
export const notifyTrainerNewBooking = async (
  appointment: Appointment,
  student: Pupil,
  trainerEmail: string
) => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #f59e0b;">üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É</h2>
      <p>–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç —É—á–µ–Ω–∏–∫–∞.</p>
      <div style="background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <p><strong>üë§ –£—á–µ–Ω–∏–∫:</strong> ${student.firstName} ${student.lastName}</p>
        <p><strong>üìß Email:</strong> ${student.email}</p>
        <p><strong>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${student.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
        <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${new Date(appointment.date).toLocaleDateString('ru-RU')}</p>
        <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${appointment.time}</p>
      </div>
      <p style="background: #fef3c7; padding: 15px; border-radius: 8px; border-left: 4px solid #f59e0b;">
        ‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç –≤–∞—à–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
      </p>
    </div>
  `;

  await sendEmail(trainerEmail, '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', html);
};

// –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 24 —á–∞—Å–∞
export const notifyReminder24h = async (appointment: Appointment, student: Pupil) => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #3b82f6;">üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ</h2>
      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${student.firstName}!</p>
      <p>–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ <strong>–∑–∞–≤—Ç—Ä–∞</strong>.</p>
      <div style="background: #eff6ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #3b82f6;">
        <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${new Date(appointment.date).toLocaleDateString('ru-RU')}</p>
        <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${appointment.time}</p>
      </div>
      <p>–ñ–¥–µ–º –≤–∞—Å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!</p>
      <p style="color: #6b7280; font-size: 14px;">–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ FitTrak Pro</p>
    </div>
  `;

  await sendEmail(student.email, '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤—Ç—Ä–∞', html);
};

// –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞
export const notifyReminder2h = async (appointment: Appointment, student: Pupil) => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #10b981;">‚è∞ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞</h2>
      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${student.firstName}!</p>
      <p>–ù–∞–ø–æ–º–∏–Ω–∞–µ–º: —É –≤–∞—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ <strong>—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞</strong>.</p>
      <div style="background: #ecfdf5; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #10b981;">
        <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${new Date(appointment.date).toLocaleDateString('ru-RU')}</p>
        <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${appointment.time}</p>
      </div>
      <p>–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ–±—Ä–∞—Ç—å—Å—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!</p>
      <p style="color: #6b7280; font-size: 14px;">–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ FitTrak Pro</p>
    </div>
  `;

  await sendEmail(student.email, '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞', html);
};

// Email –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–ø–∏—Å–∏
export const notifyCancellation = async (appointment: Appointment, student: Pupil, cancelledBy: 'trainer' | 'student') => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #ef4444;">‚ö†Ô∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</h2>
      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${student.firstName} ${student.lastName}!</p>
      <p>–í–∞—à–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</p>
      <div style="background: #fef2f2; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #ef4444;">
        <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${new Date(appointment.date).toLocaleDateString('ru-RU')}</p>
        <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${appointment.time}</p>
      </div>
      <p style="color: #6b7280; font-size: 14px;">–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ FitTrak Pro</p>
    </div>
  `;

  await sendEmail(student.email, '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞', html);
};

