import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { CheckCircle, AlertTriangle, Loader2 } from 'lucide-react';

export function AuthModeToggle() {
  const [isVisible, setIsVisible] = useState(false);
  const [isRealAuth, setIsRealAuth] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkAuthMode = async () => {
      try {
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
        const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;
        
        if (supabaseUrl && supabaseKey) {
          // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase
          const { createClient } = await import('@supabase/supabase-js');
          const supabase = createClient(supabaseUrl, supabaseKey);
          
          // –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
          const { error } = await supabase.auth.getSession();
          
          if (!error) {
            setIsRealAuth(true);
          }
        }
      } catch (error) {
        console.log('Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', error);
        setIsRealAuth(false);
      }
    };

    checkAuthMode();
  }, []);

  const toggleAuthMode = async () => {
    setIsLoading(true);
    
    try {
      if (isRealAuth) {
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
        setIsRealAuth(false);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ Supabase
        const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
        const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;
        
        if (!supabaseUrl || !supabaseKey) {
          alert('Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ VITE_SUPABASE_URL –∏ VITE_SUPABASE_ANON_KEY');
          return;
        }
        
        // –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase
        const { createClient } = await import('@supabase/supabase-js');
        const supabase = createClient(supabaseUrl, supabaseKey);
        
        const { error } = await supabase.auth.getSession();
        
        if (error) {
          alert(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: ${error.message}`);
          return;
        }
        
        setIsRealAuth(true);
      }
    } catch (error: any) {
      alert(`–û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  if (!isVisible) {
    return (
      <div className="fixed top-4 right-4 z-50">
        <Button
          onClick={() => setIsVisible(true)}
          variant="outline"
          size="sm"
          className="bg-purple-100 border-purple-300 text-purple-800 hover:bg-purple-200"
        >
          üîß Auth Mode
        </Button>
      </div>
    );
  }

  return (
    <div className="fixed top-4 right-4 z-50">
      <Card className="w-80 bg-purple-50 border-purple-200">
        <CardHeader className="pb-3">
          <CardTitle className="text-sm text-purple-800 flex items-center justify-between">
            üîß –†–µ–∂–∏–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            <Button
              onClick={() => setIsVisible(false)}
              variant="ghost"
              size="sm"
              className="h-6 w-6 p-0 text-purple-600 hover:text-purple-800"
            >
              √ó
            </Button>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="flex items-center justify-between">
            <span className="text-sm text-purple-700">–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º:</span>
            <Badge variant={isRealAuth ? "default" : "secondary"}>
              {isRealAuth ? "–†–µ–∞–ª—å–Ω–∞—è" : "–¢–µ—Å—Ç–æ–≤–∞—è"}
            </Badge>
          </div>
          
          <div className="flex items-start space-x-2">
            {isRealAuth ? (
              <CheckCircle className="h-4 w-4 text-green-500 mt-0.5" />
            ) : (
              <AlertTriangle className="h-4 w-4 text-yellow-500 mt-0.5" />
            )}
            <div className="text-xs text-purple-600">
              {isRealAuth ? (
                <div>
                  <p className="font-medium text-green-700">–†–µ–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞</p>
                  <p>–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Supabase –¥–ª—è –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
                </div>
              ) : (
                <div>
                  <p className="font-medium text-yellow-700">–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω</p>
                  <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</p>
                </div>
              )}
            </div>
          </div>
          
          <Button
            onClick={toggleAuthMode}
            disabled={isLoading}
            className="w-full"
            size="sm"
          >
            {isLoading ? (
              <>
                <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                –ü—Ä–æ–≤–µ—Ä–∫–∞...
              </>
            ) : (
              isRealAuth ? "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º" : "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º"
            )}
          </Button>
          
          {!isRealAuth && (
            <Alert>
              <AlertDescription className="text-xs">
                <p className="font-medium text-yellow-800 mb-1">–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase:</p>
                <ol className="list-decimal list-inside space-y-1 text-yellow-700">
                  <li>–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ supabase.com</li>
                  <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏ –∫–ª—é—á</li>
                  <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏</li>
                  <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Å–º. SUPABASE_SETUP.md)</li>
                </ol>
              </AlertDescription>
            </Alert>
          )}
          
          {isRealAuth && (
            <Alert>
              <AlertDescription className="text-xs text-green-700">
                <p className="font-medium mb-1">‚úÖ Supabase –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!</p>
                <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é.</p>
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>
    </div>
  );
}

